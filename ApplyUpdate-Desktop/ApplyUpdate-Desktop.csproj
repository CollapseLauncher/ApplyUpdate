<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
			One for Windows with net7.0-windows TFM, one for MacOS with net7.0-macos and one with net7.0 TFM for Linux.-->
		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>
		<BuiltInComInteropSupport>true</BuiltInComInteropSupport>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<ApplicationIcon>..\ApplyUpdate-Core\Assets\icon.ico</ApplicationIcon>
		<Platforms>x64</Platforms>
		<Version>2.3.0</Version>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>

	<ItemGroup Condition="$(RuntimeIdentifier.StartsWith('win'))">
		<DirectPInvoke Include="libHarfBuzzSharp" />
		<NativeLibrary Include="nativeLib\libHarfBuzzSharp.lib" />
		<DirectPInvoke Include="libSkiaSharp" />
		<NativeLibrary Include="nativeLib\libSkiaSharp.lib" />
        <DirectPInvoke Include="nativeLib/rcedit" />
        <NativeLibrary Include="nativeLib\rcedit.lib" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="Avalonia.Skia" Version="11.0.11" />
	  <PackageReference Include="Avalonia.Win32" Version="11.0.11" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\ApplyUpdate-Core\ApplyUpdate-Core.csproj" />
	</ItemGroup>

    <ItemGroup Condition="'$(PublishAot)' != 'true'">
	  <None Update="nativeLib\rcedit.dll">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	</ItemGroup>
</Project>